buildscript {
    repositories{
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'

repositories {
    jcenter()
    mavenLocal()
}

configurations {
    compile.transitive = false
    wrappers.transitive = false
}

def mongoVersion = '3.4.2'
def platypusJsVersion = '5.11.1'

dependencies {
    compile     "org.mongodb:mongodb-driver-async:$mongoVersion"
    testCompile "com.eas.platypus:platypus-js-common-utils:$platypusJsVersion",
                "com.eas.platypus:platypus-js-scripting:$platypusJsVersion",
                "com.eas.platypus:platypus-js-launcher:$platypusJsVersion",
                'junit:junit:4.11'
    testRuntime "org.mongodb:mongodb-driver:$mongoVersion"
    wrappers    "com.eas.platypus:platypus-js-wrappers:$platypusJsVersion"
}

def jsLibsDirName = "${buildDir}/resources/test"
def jsTestAppDirName = "${projectDir}/src/test/js"

test {
    forkEvery = 1
    systemProperties["source.url"] = file(jsTestAppDirName).toURI().toURL()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/js']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java', 'src/test/js']
        }
        resources {
            srcDirs = ['src/main/js']
        }
    }
}

task extractPlatypusJs(type: Copy) {
    configurations.wrappers.each {
        from zipTree(file(it.getAbsolutePath()))
    }
    into jsLibsDirName
}
test.dependsOn extractPlatypusJs

tasks.withType(JavaCompile) { 
    options.encoding = 'utf-8'
}
    
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {
    user = 'marat-gainullin'
    key = project.hasProperty('bintrayKey') ? project.bintrayKey : ''
    pkg {
        repo = "$group"
        name = "$project.name"
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/marat-gainullin/mongo-client.git'
        version {
            name = "${project.version}"
            released  = new Date()
        }
        githubRepo = 'marat-gainullin/mongo-client'
    }
    configurations = ['archives']
}

